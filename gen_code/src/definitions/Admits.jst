var _gen = require('./gen');
var $output = {
   name: 'Admits',
   depends: ['Diagnoses', 'Admits_temp'],
   elem: [],
   amount: 200,
   options:
   [
      { // foreign key
         name: 'employeeID',
         type: 'integer',
		   func: function works1() {
            works1.prototype.ids = (works1.prototype.ids ||
                                   $tables.find((table) => {
                                      return (table.name == 'Admits_temp');
                                   }).elem.filter(()=>{return true;}));
            return works1.prototype.ids.pop().find((attr) => {
                  return attr.name == 'employeeID'
               }).value;
         }
      },
      { // foreign key
	      name: 'patientID',
	      type: 'integer',
         func: function works2() {
            works2.prototype.ids = (works2.prototype.ids ||
                                   $tables.find((table) => {
                                      return (table.name == 'Admits_temp');
                                   }).elem.filter(()=>{return true;}));
            return works2.prototype.ids.pop().find((attr) => {
                  return attr.name == 'patientID'
               }).value;
         }
      },
	   { // foreign key
	      name: 'diagnosisID',
	      type: 'integer',
         func: function works3($table, $tuple) {
            var thispid = $tuple.find((attr) => {
               return attr.name == 'patientID';
            }).value;
            var thiseid = $tuple.find((attr) => {
               return attr.name == 'employeeID';
            }).value;
            var eid = '';
            var pid = '';
            return $tables.find((table) => {
               return (table.name == 'Diagnoses');
            }).elem.find((tuple) => {
               pid = tuple.find((attr) => {
                  return attr.name == 'patientID';
               }).value;
               eid = tuple.find((attr) => {
                  return attr.name == 'doctorID';
               }).value;
               return (thispid == pid && thiseid == eid);
            }).find((attr) => {return attr.name == 'diagnosisID'}).value;
         }
      },
      {
	      name: 'timeAdmitted',
	      type: 'datetime',
       	func: _gen.gen_date({
            id: 'addc',
            receiver: false,
            pair: true,
            attr_name: 'patientID',
            start: '01-01-2014',
            end: '12-01-2017'
         })
      },
      {
         name: 'post',
         type: 'n\a',
         func: []
      }
   ]
}
